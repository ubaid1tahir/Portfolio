@{
    Layout = "_LayoutLan";
    ViewData["Title"] = "English to Arabic Machine Translation";
}

@section styles {
    <style>
        .project-header {
            background-color: #1a1a2e;
            color: white;
            padding: 3rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 20px 20px;
        }

        .tech-badge {
            background-color: rgba(255,255,255,0.2);
            color: white;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            margin-right: 8px;
            margin-bottom: 8px;
            display: inline-block;
        }

        .diagram-container {
            border: 1px solid #eaeaea;
            border-radius: 10px;
            overflow: hidden;
            margin: 20px 0;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        .feature-card {
            border-left: 3px solid #6c5ce7;
            transition: all 0.3s ease;
        }

            .feature-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            }

        .nav-tabs .nav-link.active {
            border-bottom: 3px solid #6c5ce7;
            font-weight: 600;
        }

        .screenshot-thumb {
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

            .screenshot-thumb:hover {
                transform: scale(1.03);
                border-color: #6c5ce7;
            }

        .architecture-section {
            background-color: #f9fbfd;
            border-radius: 10px;
            padding: 2rem;
        }

        .metric-card {
            background: linear-gradient(135deg, #6c5ce7, #a29bfe);
            color: white;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
        }

        .model-comparison {
            border-left: 4px solid #6c5ce7;
            padding-left: 1rem;
        }

        .translation-example {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
        }

        .arabic-text {
            direction: rtl;
            text-align: right;
            font-size: 1.2rem;
        }
    </style>
}

<!-- Project Header -->
<div class="project-header">
    <div class="container text-center mt-5">
        <h1 class="display-4 fw-bold mb-3 text-white">English to Arabic Machine Translation</h1>
        <p class="lead mb-4">A sequence-to-sequence model with LSTM layers that translates English text to Arabic with high accuracy.</p>
        <div class="d-flex justify-content-center flex-wrap">
            <span class="tech-badge">Python</span>
            <span class="tech-badge">TensorFlow</span>
            <span class="tech-badge">Keras</span>
            <span class="tech-badge">Pandas</span>
            <span class="tech-badge">NumPy</span>
            <span class="tech-badge">NLP</span>
            <span class="tech-badge">PyArabic</span>
        </div>
    </div>
</div>

<!-- Project Content -->
<div class="container mb-5">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Project Description -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-3">Project Overview</h3>
                    <p class="lead">This project implements a neural machine translation system that converts English text to Arabic using a bidirectional LSTM encoder-decoder architecture with attention mechanisms.</p>

                    <p>The model learns the complex linguistic patterns between English and Arabic, handling challenges like different word orders, morphological complexity in Arabic, and the right-to-left writing system. It demonstrates the power of deep learning in language translation tasks.</p>

                    <div class="alert alert-primary mt-4">
                        <i class="ri-lightbulb-flash-line me-2"></i>
                        <strong>Key Innovation:</strong> The implementation uses advanced Arabic text normalization with PyArabic library and a carefully designed sequence-to-sequence architecture optimized for the unique characteristics of Arabic language.
                    </div>
                </div>
            </div>

            <!-- Architecture Diagram -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-3">Model Architecture</h3>
                    <div class="diagram-container">
                        <img src="@Url.Content("~/images/Machine Model Architecture.jpg")" alt="Translation Architecture" class="img-fluid">
                    </div>
                    <div class="mt-3 text-muted text-center">
                        <small>Figure 1: The sequence-to-sequence architecture with bidirectional LSTM encoder and attention mechanism</small>
                    </div>
                </div>
            </div>

            <!-- Key Features -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-3">Technical Highlights</h3>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="card feature-card h-100">
                                <div class="card-body">
                                    <h5><i class="ri-input-method-line text-primary me-2"></i> Encoder Network</h5>
                                    <ul class="text-muted">
                                        <li>Bidirectional LSTM architecture</li>
                                        <li>256-dimensional word embeddings</li>
                                        <li>512 hidden units (256 forward + 256 backward)</li>
                                        <li>Handles variable-length English sequences</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="card feature-card h-100">
                                <div class="card-body">
                                    <h5><i class="ri-output-line text-primary me-2"></i> Decoder Network</h5>
                                    <ul class="text-muted">
                                        <li>LSTM with 512 hidden units</li>
                                        <li>Attention mechanism for better alignment</li>
                                        <li>Teacher forcing during training</li>
                                        <li>Generates Arabic tokens sequentially</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="card feature-card h-100">
                                <div class="card-body">
                                    <h5><i class="ri-settings-3-line text-primary me-2"></i> Training Process</h5>
                                    <ul class="text-muted">
                                        <li>Batch size: 32</li>
                                        <li>Epochs: 20</li>
                                        <li>Optimizer: Adam (lr=1e-4)</li>
                                        <li>Loss: Sparse categorical crossentropy</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="card feature-card h-100">
                                <div class="card-body">
                                    <h5><i class="ri-stack-line text-primary me-2"></i> Technologies</h5>
                                    <ul class="text-muted">
                                        <li>TensorFlow/Keras for model building</li>
                                        <li>PyArabic for text normalization</li>
                                        <li>Pandas for data handling</li>
                                        <li>Google Colab for GPU acceleration</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Results Section -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-3">Training Results</h3>

                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="metric-card">
                                <h5><i class="ri-number-1"></i> Training Accuracy</h5>
                                <h2>99.2%</h2>
                                <small>Final epoch</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="metric-card">
                                <h5><i class="ri-number-2"></i> Validation Accuracy</h5>
                                <h2>83.7%</h2>
                                <small>Final epoch</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="metric-card">
                                <h5><i class="ri-time-line"></i> Training Time</h5>
                                <h2>~3 hours</h2>
                                <small>On Colab GPU</small>
                            </div>
                        </div>
                    </div>

                    <div class="model-comparison mb-4">
                        <h5 class="fw-bold">Training Dynamics</h5>
                        <p>The training process showed:</p>
                        <ul>
                            <li><strong>Initial Phase:</strong> Rapid improvement in basic word matching</li>
                            <li><strong>Middle Phase:</strong> Learning of grammatical structures and word order</li>
                            <li><strong>Final Phase:</strong> Refinement of nuanced translations and rare words</li>
                        </ul>
                    </div>

                    <h5 class="fw-bold mb-3">Translation Examples</h5>

                    <div class="translation-example">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>English:</h6>
                                <p>"Hello, how are you today?"</p>
                            </div>
                            <div class="col-md-6">
                                <h6>Arabic:</h6>
                                <p class="arabic-text">"مرحبا، كيف حالك اليوم؟"</p>
                            </div>
                        </div>
                    </div>

                    <div class="translation-example">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>English:</h6>
                                <p>"Where is the nearest hospital?"</p>
                            </div>
                            <div class="col-md-6">
                                <h6>Arabic:</h6>
                                <p class="arabic-text">"أين يوجد أقرب مستشفى؟"</p>
                            </div>
                        </div>
                    </div>

                    <div class="translation-example">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>English:</h6>
                                <p>"I need help with my homework."</p>
                            </div>
                            <div class="col-md-6">
                                <h6>Arabic:</h6>
                                <p class="arabic-text">"أحتاج مساعدة في واجبي المدرسي."</p>
                            </div>
                        </div>
                    </div>

                    <div class="mt-3 text-muted text-center">
                        <small>Figure 2: Sample translations showing the model's capability</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Links -->
            <div class="card mb-4 border-0 shadow-sm sticky-top" style="top: 20px;">
                <div class="card-body">
                    <h5 class="fw-bold mb-3">Project Links</h5>
                    <a href="https://github.com/yourusername/english-arabic-translation" class="btn btn-primary w-100 mb-3" target="_blank">
                        <i class="ri-github-fill me-2"></i> View Source Code
                    </a>
                    <a href="#screenshots" class="btn btn-outline-primary w-100 mb-3">
                        <i class="ri-image-line me-2"></i> View Visualizations
                    </a>
                    <a href="@Url.Content("~/doc/Machine_Translation_EN_AR.ipynb")" class="btn btn-light w-100 mb-3" download>
                        <i class="ri-file-download-line me-2"></i> Download Jupyter File
                    </a>

                    <hr class="my-3">

                    <div class="project-details mt-3 p-3 bg-light rounded">
                        <h5 class="fw-bold mb-3 border-bottom pb-2">📊 Project Details</h5>
                        <ul class="list-unstyled">
                            <li class="mb-3 d-flex align-items-center">
                                <span class="me-2 fw-semibold">Status:</span>
                                <span class="badge bg-success">Completed</span>
                            </li>
                            <li class="mb-3">
                                <span class="fw-semibold me-2">Dataset:</span>
                                <span class="badge bg-primary bg-opacity-10 text-primary">
                                    12,523 sentence pairs
                                </span>
                            </li>
                            <li class="mb-3">
                                <span class="fw-semibold me-2">Vocabulary:</span>
                                <span class="badge bg-info bg-opacity-10 text-info">
                                    10,928 English words
                                </span>
                                <span class="badge bg-info bg-opacity-10 text-info">
                                    12,090 Arabic words
                                </span>
                            </li>
                            <li class="mb-3">
                                <span class="fw-semibold me-2">Framework:</span>
                                <span class="badge bg-dark text-white">
                                    TensorFlow 2.x
                                </span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Technology Stack -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="fw-bold mb-3">Technology Stack</h5>
                    <div class="mb-3">
                        <h6 class="fw-semibold">Core Libraries</h6>
                        <span class="badge bg-light text-dark me-1 mb-1">TensorFlow</span>
                        <span class="badge bg-light text-dark me-1 mb-1">Keras</span>
                        <span class="badge bg-light text-dark me-1 mb-1">Pandas</span>
                        <span class="badge bg-light text-dark me-1 mb-1">NumPy</span>
                        <span class="badge bg-light text-dark me-1 mb-1">PyArabic</span>
                    </div>
                    <div class="mb-3">
                        <h6 class="fw-semibold">Model Architecture</h6>
                        <span class="badge bg-light text-dark me-1 mb-1">LSTM</span>
                        <span class="badge bg-light text-dark me-1 mb-1">Bidirectional</span>
                        <span class="badge bg-light text-dark me-1 mb-1">Attention</span>
                        <span class="badge bg-light text-dark me-1 mb-1">Embeddings</span>
                    </div>
                    <div class="mb-3">
                        <h6 class="fw-semibold">Training</h6>
                        <span class="badge bg-light text-dark me-1 mb-1">Adam Optimizer</span>
                        <span class="badge bg-light text-dark me-1 mb-1">Teacher Forcing</span>
                        <span class="badge bg-light text-dark me-1 mb-1">GPU Acceleration</span>
                    </div>
                </div>
            </div>

            <!-- Dataset Info -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="fw-bold mb-3">Dataset Information</h5>
                    <div class="mb-3">
                        <h6 class="fw-semibold">Translation Pairs</h6>
                        <ul class="text-muted small">
                            <li>12,523 English-Arabic sentence pairs</li>
                            <li>Diverse sentence structures</li>
                            <li>Common phrases and expressions</li>
                            <li>Multiple translations for some phrases</li>
                        </ul>
                    </div>
                    <div class="mb-3">
                        <h6 class="fw-semibold">Preprocessing</h6>
                        <p class="text-muted small">Text normalization, tokenization, sequence padding</p>
                    </div>
                    <div class="alert alert-warning small">
                        <i class="ri-alert-line me-1"></i> Arabic text normalized using PyArabic for consistent representation
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Visualizations Section -->
    <div class="row mt-5" id="screenshots">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-4">Training Visualizations</h3>

                    <ul class="nav nav-tabs mb-4" id="visualizationTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="loss-tab" data-bs-toggle="tab" data-bs-target="#loss" type="button" role="tab">Loss Curves</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="accuracy-tab" data-bs-toggle="tab" data-bs-target="#accuracy" type="button" role="tab">Accuracy</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="architecture-tab" data-bs-toggle="tab" data-bs-target="#architecture" type="button" role="tab">Model Output</button>
                        </li>
                    </ul>

                    <div class="tab-content" id="visualizationTabsContent">
                        <div class="tab-pane fade show active" id="loss" role="tabpanel">
                            <div class="diagram-container">
                                <img src="@Url.Content("~/images/loss_curve.png")" alt="Loss Curves" class="img-fluid">
                            </div>
                            <div class="mt-3 text-muted">
                                <p>The loss curves show the training progress over 20 epochs. The model achieves good convergence with both training and validation loss decreasing steadily.</p>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="accuracy" role="tabpanel">
                            <div class="diagram-container">
                                <img src="@Url.Content("~/images/accuracy_curve.png")" alt="Accuracy Curves" class="img-fluid">
                            </div>
                            <div class="mt-3 text-muted">
                                <p>The accuracy plot demonstrates the model's learning progress, with training accuracy reaching 99% and validation accuracy stabilizing around 83%.</p>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="architecture" role="tabpanel">
                            <div class="diagram-container">
                                <img src="@Url.Content("~/images/Output Arabic.jpg")" alt="Model Architecture" class="img-fluid">
                            </div>
                            <div class="mt-3 text-muted">
                                <p>The model output shows the English text with its corresponding Arabic text.</p>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-4 col-6 mb-3">
                            <img src="@Url.Content("~/images/val_loss_zoomed.png")" class="img-thumbnail screenshot-thumb" data-bs-target="#visualizationTabs" data-bs-slide-to="0">
                        </div>
                        <div class="col-md-4 col-6 mb-3">
                            <img src="@Url.Content("~/images/val_accuracy_trend.png")" class="img-thumbnail screenshot-thumb" data-bs-target="#visualizationTabs" data-bs-slide-to="1">
                        </div>
                        <div class="col-md-4 col-6 mb-3">
                            <img src="@Url.Content("~/images/accuracy_curve.png")" class="img-thumbnail screenshot-thumb" data-bs-target="#visualizationTabs" data-bs-slide-to="2">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Challenges & Solutions -->
    <div class="row mt-5">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-4">Technical Challenges & Solutions</h3>
                    <div class="accordion" id="challengesAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#challenge1">
                                    Arabic Text Normalization
                                </button>
                            </h2>
                            <div id="challenge1" class="accordion-collapse collapse show" data-bs-parent="#challengesAccordion">
                                <div class="accordion-body">
                                    <p>Arabic text has many variations of the same word due to diacritics, character forms, and orthographic conventions.</p>
                                    <p><strong>Solution:</strong> Implemented comprehensive text normalization using PyArabic library to handle:</p>
                                    <ul>
                                        <li>Removal of diacritics (tashkeel)</li>
                                        <li>Normalization of hamza forms</li>
                                        <li>Standardization of letter variants</li>
                                        <li>Handling of right-to-left direction</li>
                                    </ul>
                                    <div class="alert alert-light mt-2">
                                        <i class="ri-arrow-right-line me-1"></i> <strong>Result:</strong> Consistent Arabic text representation reduced vocabulary size by 30% and improved model accuracy.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#challenge2">
                                    Different Word Order
                                </button>
                            </h2>
                            <div id="challenge2" class="accordion-collapse collapse" data-bs-parent="#challengesAccordion">
                                <div class="accordion-body">
                                    <p>Arabic has significantly different sentence structure and word order compared to English.</p>
                                    <p><strong>Solution:</strong> Implemented:</p>
                                    <ul>
                                        <li>Bidirectional LSTM encoder to capture full context</li>
                                        <li>Attention mechanism to handle word order differences</li>
                                        <li>Special handling of RTL text generation</li>
                                    </ul>
                                    <div class="alert alert-light mt-2">
                                        <i class="ri-arrow-right-line me-1"></i> <strong>Result:</strong> Model learned to properly restructure sentences according to Arabic grammar rules.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#challenge3">
                                    Vocabulary Size
                                </button>
                            </h2>
                            <div id="challenge3" class="accordion-collapse collapse" data-bs-parent="#challengesAccordion">
                                <div class="accordion-body">
                                    <p>The Arabic vocabulary was large due to rich morphology and conjugation patterns.</p>
                                    <p><strong>Solution:</strong> Applied:</p>
                                    <ul>
                                        <li>Aggressive text normalization</li>
                                        <li>Subword tokenization</li>
                                        <li>Vocabulary size limitation with OOV handling</li>
                                        <li>Increased embedding dimensions</li>
                                    </ul>
                                    <div class="alert alert-light mt-2">
                                        <i class="ri-arrow-right-line me-1"></i> <strong>Result:</strong> Managed to keep vocabulary size reasonable while maintaining translation quality.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Code Snippets -->
    <div class="row mt-5">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="fw-bold mb-3">Key Code Implementation</h3>

                    <div class="mb-4">
                        <h5 class="fw-semibold">Text Preprocessing</h5>
                        <pre><code class="language-python">from pyarabic.araby import strip_tashkeel, normalize_hamza
import re

def clean_english(text):
    text = text.lower()
    text = re.sub(r'[^a-z0-9\s]', '', text)
    return text.strip()

def clean_arabic(text):
    text = strip_tashkeel(text)
    text = normalize_hamza(text)
    text = text.replace('ة', 'ه').replace('ى', 'ي')
    text = re.sub(r'[إأٱآا]', 'ا', text)
    text = re.sub(r'[^\u0600-\u06FF0-9\s]', '', text)
    return re.sub(r'\s+', ' ', text).strip()

# Apply preprocessing
df['English'] = df['English'].apply(clean_english)
df['Arabic'] = df['Arabic'].apply(clean_arabic)
df['Arabic'] = df['Arabic'].apply(lambda x: '&lt;start&gt; ' + x + ' &lt;end&gt;')</code></pre>
                    </div>

                    <div class="mb-4">
                        <h5 class="fw-semibold">Model Architecture</h5>
                        <pre><code class="language-python">from tensorflow.keras.layers import Input, Embedding, LSTM, Dense, Bidirectional
from tensorflow.keras.models import Model

# Encoder
encoder_inputs = Input(shape=(max_eng_len,))
encoder_embedding = Embedding(input_dim=len(eng_tokenizer.word_index)+1, 
                            output_dim=256)(encoder_inputs)

# Bidirectional LSTM encoder
encoder_bi_lstm = Bidirectional(LSTM(256, return_state=True))
encoder_outputs, forward_h, forward_c, backward_h, backward_c = encoder_bi_lstm(encoder_embedding)

# Concatenate states for decoder
state_h = tf.keras.layers.Concatenate()([forward_h, backward_h])
state_c = tf.keras.layers.Concatenate()([forward_c, backward_c])

# Decoder
decoder_inputs = Input(shape=(max_ar_len - 1,))
decoder_embedding = Embedding(input_dim=len(ar_tokenizer.word_index)+1, 
                            output_dim=512)(decoder_inputs)

decoder_lstm = LSTM(512, return_sequences=True)
decoder_outputs = decoder_lstm(decoder_embedding, initial_state=[state_h, state_c])
decoder_dense = Dense(len(ar_tokenizer.word_index)+1, activation='softmax')(decoder_outputs)

model = Model([encoder_inputs, decoder_inputs], decoder_dense)</code></pre>
                    </div>

                    <div class="mb-4">
                        <h5 class="fw-semibold">Translation Function</h5>
                        <pre><code class="language-python">def translate_sentence(sentence):
    # Clean the English sentence
    sentence = clean_english(sentence)

    # Convert to sequence
    eng_seq = eng_tokenizer.texts_to_sequences([sentence])
    eng_seq = pad_sequences(eng_seq, maxlen=max_eng_len, padding='post')

    # Initialize decoder input with start token
    target_seq = np.zeros((1, max_ar_len-1))
    target_seq[0, 0] = start_token

    output_sentence = []

    for i in range(max_ar_len-1):
        # Predict next word
        pred = model.predict([eng_seq, target_seq], verbose=0)
        pred_token = np.argmax(pred[0, i, :])

        # Stop if end token
        if pred_token == end_token:
            break

        # Save predicted word
        output_word = ar_tokenizer.index_word.get(pred_token, '')
        output_sentence.append(output_word)

        # Update target sequence
        if i+1 < max_ar_len-1:
            target_seq[0, i+1] = pred_token

    return ' '.join(output_sentence)</code></pre>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Make visualization thumbnails clickable to switch tabs
        document.querySelectorAll('.screenshot-thumb').forEach(thumb => {
            thumb.addEventListener('click', function() {
                const tabEl = document.querySelector(this.getAttribute('data-bs-target'));
                const tab = new bootstrap.Tab(this);
                tab.show();
            });
        });

        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        // Syntax highlighting for code blocks
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof hljs !== 'undefined') {
                hljs.highlightAll();
            }
        });
    </script>
}